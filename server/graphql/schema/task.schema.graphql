# 任务 task

type Task {
  _id: String!

  platform: TaskPlatform
  type: TaskType

  goodsName: String
  goodsLink: String
  goodsImage: String
  goodsPrice: Float
  goodsTotal: Int
  goodsPriceShowed: Float
  goodsSpecification: String
  isFreeShipping: Boolean

  search_sort: String
  search_ReceiverNum: Int
  search_price_from: Int
  search_price_to: Int
  search_where: String
  search_keyword: String

  orders: [Order]

  startTime: Float
  endTime: Float
  orderQuantity: Int

  commission: Float
  platformServiceFee: Float
  platformCommission: Float

  extraCommission: Float
  extraImages: [String]

  status: TaskStatus

  storeid: String
  userid: String

  message: String

  createdAt: Float
  updatedAt: Float
}

# 0 default,
# 1 checked,
enum TaskStatus {
  DEFAULT
  CONFIRMED
  CHECKED
  BAD
  AUTO_CHECKED
}

type TaskList {
  list: [Task]
  total: Int
}

type TaskWithStore {
  _id: String!

  platform: TaskPlatform
  type: TaskType

  goodsName: String
  goodsLink: String
  goodsImage: String
  goodsPrice: Float
  goodsTotal: Int
  goodsPriceShowed: Float
  goodsSpecification: String
  isFreeShipping: Boolean

  search_sort: String
  search_ReceiverNum: Int
  search_price_from: Int
  search_price_to: Int
  search_where: String
  search_keyword: String

  orders: [Order]

  startTime: Float
  endTime: Float
  orderQuantity: Int

  commission: Float
  platformServiceFee: Float
  platformCommission: Float

  extraCommission: Float
  extraImages: [String]

  status: TaskStatus

  storeid: String
  userid: String
  store: Store

  createdAt: Float
  updatedAt: Float
}
type TaskWithStoreList {
  list: [TaskWithStore]
  total: Int
}

enum TaskPlatform {
  TMALL
  TAOBAO
}
enum TaskType {
  MOBILE_TAOBAO
  MOBILE_TAOBAO_PRESALE
  MOBILE_TMALL
  MOBILE_TAOBAO_SPECIAL
  PC_TAOBAO_REFUND
  PC_TAOBAO
}

# 订单 order

type Order {
  _id: String
  taskid: String
  type: OrderType

  buyTimes: Int
  browseTimes: Int
  collectTimes: Int

  collectGoods: Boolean
  collectStore: Boolean
  addToCart: Boolean

  searchKeyword: String
  goodsSpecification: String

  comment: String
  pictures: [String]
  remark: String
  status: OrderStatus

  userid: String
  workerid: String

  startAt: Float
  #endAt: Float

  createdAt: Float
  updatedAt: Float
}
type OrderList {
  list: [Order]
  total: Int
}

input orderInput {
  type: OrderType

  buyTimes: Int
  browseTimes: Int
  collectTimes: Int
  collectGoods: Boolean
  collectStore: Boolean
  addToCart: Boolean

  searchKeyword: String
  goodsSpecification: String

  comment: String
  pictures: [String]
  remark: String
}
enum OrderStatus {
  DEFAULT
  ASSIGNED
  CONFIRM
  #COMMENT
  FINISHED
  ABORT
}
enum OrderType {
  DEFAULT
  WORD_COMMENT
  PICTURE_COMMENT
}

# graphql schema
type Query{
    user(_id: String!): User
    store(_id: String!): Store
    bill(userid: String): Bill
    billRecord(_id: String!): BillRecord
    task(_id: String!):Task

    checkIn(_id:String):CheckIn
    reson(_id:String):Reason
    message(_id:String):Message
    rule(_id:String):Rule
    
}


type Mutation{
    updateUserInfo(
        qq: String
        idCard: String!
        bankCard: String!
    ): User
    updateUserStatus(
        _id: String!
        status: UserStatus
    ):  User
    userList(skip: Int, limit:Int): UserList

    # create a store and bind to the creator
    bindStore(
        name: String!
        website: String
        wangwang: String
        storeScreenShotImage: String
        address: String
        contactPhone: String
        type: String
    ): Store

    updateStoreInfo(
        _id: String!
        website: String
        wangwang: String
        storeScreenShotImage:String
        address: String
        contactPhone: String
    ):Store
    updateStoreStatus(
        _id: String!
        status: StoreStatus!
    ):Store
    storeList(skip: Int, limit:Int): StoreList

    newBillRecord(
        toUserid: String!
        amount: Float!
        # 0 default, normal charge 正常充值, 1 Promotion 推广金,
        # 2 任务佣金锁定, 3 任务佣金退还, 4 任务佣金发放
        # 5 提现
        type: BillRecordType

    ): BillRecord
    checkBillRecord(
        _id: String!
    ): BillRecord
    newTask(
        # _id:String
        orderNumber: String

        goodsName: String
        goodsLink: String
        goodsImage: String
        goodsPrice: Float
        goodsTotal: Int
        goodsPriceShowed: Float
        goodsSpecification: String
        isFreeShipping: Boolean

        howToFindGoods: String

        startTime: Float
        endTime: Float
        total: Int

        commission: Float
        platformServiceFee: Float
        platformCommission: Float

        extraCommission: Float
        extraImages:[String]
        remark:String

        storeid: String
    ): Task
    
    # startTask(
    #     _id:String!
    # ) :Task
    updateTaskStatus(
        _id:String!
        status: TaskStatus
    ):Task


}


